{"version":3,"sources":["store/action.js","store/fetchPokemons.js","components/Screen.js","components/GameBoy.js","components/PokemonItem.js","components/PokeList.js","components/Loader.js","components/PokeItem.js","components/MyPokeList.js","App.js","store/initialState.js","store/reducer.js","store/store.js","index.js"],"names":["urls","i","push","concat","requests","map","url","fetch","connect","onScreen","pokemons","id","isCatch","react_default","a","createElement","Fragment","alt","name","src","className","img","pending","click","showPokemon","catchPokemon","components_Screen","onClick","PokemonItem","pokemon","imgSrc","style","color","fontWeight","components_PokemonItem","key","Loader","react_loader_spinner_default","type","height","width","PokeItem","sprites","front_shiny","front_female","back_shiny","base_experience","types","MyPokeList","myPokemons","filter","x","length","_useState","useState","_useState2","Object","slicedToArray","myPokListToMap","setMyPokListToMap","useEffect","Promise","all","then","responses","res","json","PokeItem_PokeItem","dispatch","fetchPokemons","fetchPokemonPending","captureRate","capture_rate","fetchPokemonSuccess","filteredPokemons","max","Math","floor","random","showPokemonAction","catchPokemonAction","smallScreen","setSmallScreen","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","components_GameBoy","components_PokeList","initialState","myPokelist","reducer","state","action","objectSpread2","store","createStore","applyMiddleware","thunk","props","es","assign","rootElement","document","getElementById","ReactDOM","render","StrictMode","store_store","src_App"],"mappings":"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","file":"static/js/main.c537d9ce.chunk.js","sourcesContent":["export const CLICK = 'CLICK'\r\nexport const FETCH_POKEMON_SUCCESS = 'FETCH_POKEMON_SUCCESS'\r\nexport const FETCH_POKEMON_PENDING = 'FETCH_POKEMON_PENDING'\r\nexport const SHOW_POKEMON = 'SHOW_POKEMON'\r\nexport const CATCH_POKEMON = 'CATCH_POKEMON'\r\n// On peux stocker ce que l'on veux dans action\r\nexport const fetchPokemonSuccess = (pokemons) => ({\r\n    type: FETCH_POKEMON_SUCCESS,\r\n    pokemons,\r\n})\r\nexport const fetchPokemonPending = (pokemons) => ({\r\n    type: FETCH_POKEMON_PENDING,\r\n    pokemons,\r\n})\r\nexport const showPokemonAction = (pokemons) => {\r\n    const filteredPokemons = pokemons.filter(pokemon => !pokemon.isCatch)\r\n    const max = filteredPokemons.length\r\n    const random = Math.floor(Math.random() * max)\r\n    const onScreen = filteredPokemons[random]\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_POKEMON, onScreen })\r\n    }\r\n}\r\nexport const catchPokemonAction = () => {\r\n    const random = Math.floor(Math.random() * 255)\r\n    return dispatch => {\r\n        dispatch({ type: CATCH_POKEMON, random })\r\n    }\r\n}","\r\nimport { fetchPokemonSuccess, fetchPokemonPending } from './action';\r\nconst numberOfPokemon = 250\r\nconst urls = []\r\nfor (let i = 1; i <= numberOfPokemon; i++) {\r\n    urls.push(`https://pokeapi.co/api/v2/pokemon-species/${i}`)\r\n}\r\nconst requests = urls.map(url => fetch(url))\r\n// on export un dispatch\r\nexport default () => {\r\n    return dispatch => {\r\n        dispatch(fetchPokemonPending())\r\n        // promise.all prend un array de requetes , ne passe pas à la suite tant que tt soit validé\r\n        Promise.all(requests)\r\n            // on attend les reponses et on les transformes en JSON\r\n            .then(responses => Promise.all(responses.map(res => res.json())))\r\n            .then(pokemons => pokemons.map(pokemon => ({\r\n                id: pokemon.id,\r\n                name: pokemon.name,\r\n                captureRate: pokemon.capture_rate,\r\n                isCatch: false,\r\n                img: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`,\r\n\r\n            })))\r\n            .then(pokemons => dispatch(fetchPokemonSuccess(pokemons)))\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nconst Screen = ({ onScreen, pokemons }) => {\r\n\r\n  if (onScreen.id) {\r\n    if (pokemons[onScreen.id - 1].isCatch) {\r\n      return <>\r\n\r\n        <img\r\n          alt={onScreen.name}\r\n          src='https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png'\r\n        />\r\n      </>\r\n    }\r\n    return (\r\n      <>\r\n        <h3 className='screen-name'>{onScreen.name}</h3>\r\n        <img\r\n          alt={onScreen.name}\r\n          src={onScreen.img}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <div className='screen-logo'>GAME BOY</div>\r\n      <div className='screen-logo-shadow'>GAME BOY</div>\r\n      <div className='nintendo-logo-screen'>Nintendo&reg;</div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ onScreen, pokemons }) => {\r\n  return {\r\n    onScreen,\r\n    pokemons\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React from \"react\";\r\n\r\nimport \"./GameBoy.css\";\r\nimport { connect } from 'react-redux'\r\nimport Screen from \"./Screen\";\r\n\r\nconst GameBoy = ({ showPokemon, catchPokemon, click }) => {\r\n\r\n  return (\r\n\r\n    <div className=\"gameBoyContainer\">\r\n      <h2 className=\"gameBoyTry\"> You Try : {click}</h2>\r\n      <div className=\"gameboy\">\r\n        <div className=\"body\">\r\n          <div className=\"screen-box\">\r\n            <div className=\"power-box\">\r\n              <div className=\"power-light\" />\r\n              <div className=\"power-status\">)))</div>\r\n              <div className=\"power-text\">POWER</div>\r\n            </div>\r\n            <div className=\"screen-display\">\r\n              <Screen />\r\n            </div>\r\n            <div className=\"gameboy-color-logo\">\r\n              <span className=\"logo-gb\">GAME BOY </span>\r\n              <span className=\"logo-color\">\r\n                <span className=\"logo-color-c\">C</span>\r\n                <span className=\"logo-color-o1\">O</span>\r\n                <span className=\"logo-color-l\">L</span>\r\n                <span className=\"logo-color-o2\">O</span>\r\n                <span className=\"logo-color-r\">R</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"nintendo-logo-body\">Nintendo</div>\r\n          <div className=\"button-box\">\r\n            <div className=\"arrow-group\" onClick={() => showPokemon()}>\r\n              <div className=\"up-box\">\r\n                <span className=\"arrow up\" />\r\n              </div>\r\n              <div className=\"right-box\" onClick={() => showPokemon()}>\r\n                <span className=\"arrow right\" />\r\n              </div>\r\n              <div className=\"down-box\" onClick={() => showPokemon()}>\r\n                <span className=\"arrow down\" />\r\n              </div>\r\n              <div className=\"center-box\" onClick={() => showPokemon()}>\r\n                <span className=\"dent\">\r\n                  <span className=\"dent-highlight\" />\r\n                </span>\r\n              </div>\r\n              <div className=\"left-box\" onClick={() => showPokemon()}>\r\n                <span className=\"arrow left\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"ab-button a\" onClick={() => catchPokemon()}>\r\n              <span className=\"button-text-height\" >A</span>\r\n            </div>\r\n\r\n            <div className=\"ab-button b\" onClick={() => showPokemon()}>\r\n              <span className=\"button-text-height\">B</span>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"rules\">\r\n            <p> Try to catch Pokemon with the button A</p>\r\n            <p> Pass to another Pokemon with the button B or Direction button</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\nconst mapStateToProps = ({ pending, pokemons, click }) => {\r\n  return {\r\n    pending,\r\n    pokemons,\r\n    click\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(GameBoy);\r\n","import React from \"react\";\r\n\r\nconst PokemonItem = ({ pokemon }) => {\r\n  const imgSrc = pokemon.isCatch\r\n    ? 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png'\r\n    : pokemon.img\r\n\r\n\r\n  return (\r\n    <li className=\"pokemon-item\">\r\n      <img\r\n        alt={pokemon.name}\r\n        src={imgSrc}\r\n      />\r\n      <p style={pokemon.isCatch ? { color: 'red', fontWeight: 'bold' } : { color: 'black' }}>  {pokemon.name}</p>\r\n\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PokemonItem;\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport PokemonItem from \"./PokemonItem\";\r\n\r\nconst PokeList = ({ click, pokemons, pending }) => {\r\n\r\n  return (\r\n    <div className=\"list-container\">\r\n      <ul>\r\n        {\r\n          pokemons.map(pokemon => (\r\n            <PokemonItem\r\n              key={pokemon.id}\r\n              pokemon={pokemon}\r\n            />\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n// Map le state du reducer en props\r\nconst mapStateToProps = ({ click, pokemons, pending }) => {\r\n  return {\r\n    click,\r\n    pokemons,\r\n    pending\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(PokeList);\r\n","import React from 'react'\r\nimport Spinner from 'react-loader-spinner'\r\nexport default function Loader() {\r\n    return (\r\n        <div>\r\n            <Spinner\r\n                type='Puff'\r\n                color='#038E9F'\r\n                height={100}\r\n                width={100}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './PokeItem.css'\r\nexport default function PokeItem({ pokemon }) {\r\n    return (\r\n        <div className=\"itemPokeContainer\" >\r\n            <div className=\"imagesPokemon\">\r\n                <img src={pokemon.sprites.front_shiny} alt={pokemon.name} />\r\n                <img src={pokemon.sprites.front_female === null ? pokemon.sprites.back_shiny : pokemon.sprites.front_female} alt={pokemon.name} />\r\n            </div>\r\n            <h3 className=\"namePokemon\">{pokemon.name}</h3>\r\n            <h4>Xp : {pokemon.base_experience}</h4>\r\n            <div>\r\n                <h3>Types:</h3>\r\n                {pokemon.types.map((type, id) =>\r\n                    <div key={id}>\r\n                        <h3>{type.type.name}</h3>\r\n                    </div>)}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PokeItem from './PokeItem';\r\n\r\nexport default function MyPokeList({ pokemons }) {\r\n\r\n    const myPokemons = pokemons.filter(x => x.isCatch)\r\n    const urls = []\r\n    if (myPokemons) {\r\n        for (let i = 1; i <= myPokemons.length; i++) {\r\n            urls.push(`https://pokeapi.co/api/v2/pokemon/${myPokemons[i - 1].name}`)\r\n        }\r\n    }\r\n    const requests = urls.map(url => fetch(url))\r\n    const [myPokListToMap, setMyPokListToMap] = useState([])\r\n    const fetchAllPokData = () => {\r\n        Promise.all(requests)\r\n            // on attend les reponses et on les transformes en JSON\r\n            .then(responses => Promise.all(responses.map(res => res.json())))\r\n            .then(responses => setMyPokListToMap(responses))\r\n    }\r\n    useEffect(() => {\r\n        if (myPokemons.length > 0) {\r\n            fetchAllPokData()\r\n        }\r\n    }, [pokemons])\r\n\r\n    return (\r\n        <div >\r\n            <h1>My Pokemons</h1>\r\n            <h2> {pokemons.filter(pokemon => pokemon.isCatch).length} / {pokemons.length}</h2>\r\n            <div className=\"containerPokeList\">\r\n                {myPokListToMap.map(pokemon =>\r\n                    < PokeItem key={pokemon.id} pokemon={pokemon} />\r\n                )}\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from 'react-redux'\nimport { CLICK, showPokemonAction, catchPokemonAction } from './store/action'\nimport fetchPokemons from './store/fetchPokemons'\nimport GameBoy from \"./components/GameBoy\";\nimport PokeList from \"./components/PokeList\";\nimport Loader from './components/Loader';\nimport MyPokeList from './components/MyPokeList';\n\nconst App = ({ click, fetchPokemons, pending, pokemons, showPokemon, catchPokemon }) => {\n  useEffect(() => {\n    fetchPokemons()\n  }, [fetchPokemons])\n  useEffect(() => {\n  }, [pokemons])\n  const [smallScreen, setSmallScreen] = useState(false);\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 744px)\");\n    // addlistener c'est comme addeventlisterner pour les medias queries en JS\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    }\n\n  })\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches) {\n      setSmallScreen(true);\n    } else {\n      setSmallScreen(false);\n    }\n  }\n  return (\n    <div className=\"App\">\n      {pending ?\n        <Loader />\n        :\n        <>\n          {!smallScreen &&\n            <>\n              <MyPokeList\n                pokemons={pokemons}\n              />\n              <GameBoy\n                showPokemon={() => showPokemon(pokemons)}\n                catchPokemon={catchPokemon}\n              />\n              <PokeList />\n            </>\n          }\n\n\n          {smallScreen &&\n            <>\n              <GameBoy\n                showPokemon={() => showPokemon(pokemons)}\n                catchPokemon={catchPokemon}\n              />\n              <PokeList />\n              <MyPokeList\n                pokemons={pokemons}\n              />\n            </>\n          }\n        </>\n      }\n    </div>\n  );\n};\nconst mapStateToProps = ({ pending, pokemons, click }) => {\n  return {\n    pending,\n    pokemons,\n    click\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    // ici autre manière de faire, on passe une fonction qui lance l'action\n    fetchPokemons: () => dispatch(fetchPokemons()),\n    showPokemon: pokemons => dispatch(showPokemonAction(pokemons)),\n    catchPokemon: () => dispatch(catchPokemonAction()),\n    // manière plus tradi de lancer une action\n    click: () => dispatch({ type: CLICK })\n  }\n}\n// puis le passer à connect pour enfin le passer en props au composant \nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","export default {\r\n    click: 0,\r\n    pokemons: [],\r\n    pending: false,\r\n    onScreen: {},\r\n    myPokelist: []\r\n}","import initialState from './initialState'\r\nimport { CLICK, FETCH_POKEMON_SUCCESS, FETCH_POKEMON_PENDING, SHOW_POKEMON, CATCH_POKEMON } from './action'\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CLICK:\r\n            return {\r\n                ...state,\r\n                click: state.click + 1\r\n            }\r\n        case FETCH_POKEMON_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.pokemons,\r\n                pending: false\r\n            }\r\n        case FETCH_POKEMON_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            }\r\n        case SHOW_POKEMON:\r\n            return {\r\n                ...state,\r\n                onScreen: action.onScreen\r\n            }\r\n        case CATCH_POKEMON:\r\n            return {\r\n                ...state,\r\n                pokemons: state.pokemons.map(pokemon => {\r\n                    if (pokemon.id === state.onScreen.id) {\r\n                        const isCaught = pokemon.captureRate + action.random\r\n\r\n                        if (isCaught >= 255) {\r\n                            return { ...pokemon, isCatch: true }\r\n                        }\r\n                        return pokemon\r\n                    }\r\n                    return pokemon\r\n                }),\r\n                click: state.click + 1,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer","import React from 'react'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './reducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk' // middleware\r\nimport initialState from './initialState'\r\n\r\nconst store = createStore(reducer, initialState, applyMiddleware(thunk))\r\n\r\nexport default props => <Provider store={store} {...props} />","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport Provider from './store/store'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n)"],"sourceRoot":""}